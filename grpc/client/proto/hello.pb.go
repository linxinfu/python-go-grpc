// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/hello.proto

package hello

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StringRequest struct {
	Param                string   `protobuf:"bytes,1,opt,name=param,proto3" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringRequest) Reset()         { *m = StringRequest{} }
func (m *StringRequest) String() string { return proto.CompactTextString(m) }
func (*StringRequest) ProtoMessage()    {}
func (*StringRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7116fbf19896b02, []int{0}
}

func (m *StringRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringRequest.Unmarshal(m, b)
}
func (m *StringRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringRequest.Marshal(b, m, deterministic)
}
func (m *StringRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringRequest.Merge(m, src)
}
func (m *StringRequest) XXX_Size() int {
	return xxx_messageInfo_StringRequest.Size(m)
}
func (m *StringRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StringRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StringRequest proto.InternalMessageInfo

func (m *StringRequest) GetParam() string {
	if m != nil {
		return m.Param
	}
	return ""
}

type StringResponse struct {
	Resp                 string   `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringResponse) Reset()         { *m = StringResponse{} }
func (m *StringResponse) String() string { return proto.CompactTextString(m) }
func (*StringResponse) ProtoMessage()    {}
func (*StringResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7116fbf19896b02, []int{1}
}

func (m *StringResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringResponse.Unmarshal(m, b)
}
func (m *StringResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringResponse.Marshal(b, m, deterministic)
}
func (m *StringResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringResponse.Merge(m, src)
}
func (m *StringResponse) XXX_Size() int {
	return xxx_messageInfo_StringResponse.Size(m)
}
func (m *StringResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StringResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StringResponse proto.InternalMessageInfo

func (m *StringResponse) GetResp() string {
	if m != nil {
		return m.Resp
	}
	return ""
}

func init() {
	proto.RegisterType((*StringRequest)(nil), "StringRequest")
	proto.RegisterType((*StringResponse)(nil), "StringResponse")
}

func init() { proto.RegisterFile("proto/hello.proto", fileDescriptor_f7116fbf19896b02) }

var fileDescriptor_f7116fbf19896b02 = []byte{
	// 133 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0xcf, 0x48, 0xcd, 0xc9, 0xc9, 0xd7, 0x03, 0xb3, 0x95, 0x54, 0xb9, 0x78, 0x83, 0x4b,
	0x8a, 0x32, 0xf3, 0xd2, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x44, 0xb8, 0x58, 0x0b,
	0x12, 0x8b, 0x12, 0x73, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x20, 0x1c, 0x25, 0x15, 0x2e,
	0x3e, 0x98, 0xb2, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x21, 0x2e, 0x96, 0xa2, 0xd4, 0xe2,
	0x02, 0xa8, 0x32, 0x30, 0xdb, 0xc8, 0x9c, 0x8b, 0xd3, 0x03, 0x64, 0x76, 0x78, 0x7e, 0x51, 0x8a,
	0x90, 0x16, 0x17, 0x2b, 0x98, 0x23, 0xc4, 0xa7, 0x87, 0x62, 0x83, 0x14, 0xbf, 0x1e, 0xaa, 0x51,
	0x4a, 0x0c, 0x49, 0x6c, 0x60, 0xc7, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x93, 0x16,
	0x82, 0xa1, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HelloWordClient is the client API for HelloWord service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelloWordClient interface {
	Hello(ctx context.Context, in *StringRequest, opts ...grpc.CallOption) (*StringResponse, error)
}

type helloWordClient struct {
	cc *grpc.ClientConn
}

func NewHelloWordClient(cc *grpc.ClientConn) HelloWordClient {
	return &helloWordClient{cc}
}

func (c *helloWordClient) Hello(ctx context.Context, in *StringRequest, opts ...grpc.CallOption) (*StringResponse, error) {
	out := new(StringResponse)
	err := c.cc.Invoke(ctx, "/HelloWord/Hello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelloWordServer is the server API for HelloWord service.
type HelloWordServer interface {
	Hello(context.Context, *StringRequest) (*StringResponse, error)
}

// UnimplementedHelloWordServer can be embedded to have forward compatible implementations.
type UnimplementedHelloWordServer struct {
}

func (*UnimplementedHelloWordServer) Hello(ctx context.Context, req *StringRequest) (*StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hello not implemented")
}

func RegisterHelloWordServer(s *grpc.Server, srv HelloWordServer) {
	s.RegisterService(&_HelloWord_serviceDesc, srv)
}

func _HelloWord_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StringRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloWordServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/HelloWord/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloWordServer).Hello(ctx, req.(*StringRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HelloWord_serviceDesc = grpc.ServiceDesc{
	ServiceName: "HelloWord",
	HandlerType: (*HelloWordServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _HelloWord_Hello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/hello.proto",
}
